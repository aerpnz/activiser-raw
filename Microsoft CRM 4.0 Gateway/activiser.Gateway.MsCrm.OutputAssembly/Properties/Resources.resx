<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="guidRegex" xml:space="preserve">
    <value>^[A-Fa-f0-9]{32}$|^[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}$|^{[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}}?$|^\(?[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}\)?$|^({)?[0xA-Fa-f0-9]{3,10}(, {0,1}[0xA-Fa-f0-9]{3,6}){2}, {0,1}({)([0xA-Fa-f0-9]{3,4}, {0,1}){7}[0xA-Fa-f0-9]{3,4}(}})$</value>
  </data>
  <data name="DynamicAssignErrorMessageFormat" xml:space="preserve">
    <value>Error updating activiser {0} entity as CRM {1} entity\n\tException message:{2}\n\tInnerXml:\n{3}\n\nEntity:\n{4}\nAssignee:\n{5}\n\nStackTrace:\n{6}</value>
  </data>
  <data name="MissingDataMessage" xml:space="preserve">
    <value>A valid Entity ID and a valid Owner ID are both required.</value>
  </data>
  <data name="DynamicSetStateErrorMessageFormat" xml:space="preserve">
    <value>Error updating activiser {0} entity as CRM {1} entity\n\tException message:{2}\n\tInnerXml:\n{3}\n\nEntity:\n{4}\n\nStackTrace:\n{5}</value>
  </data>
  <data name="DynamicSetStateMissingDataMessage" xml:space="preserve">
    <value>A valid Entity ID and a valid State Value are both required.</value>
  </data>
  <data name="DynamicInsertErrorMessageFormat" xml:space="preserve">
    <value>Error creating activiser {0} entity as CRM {1} entity\n\tException message:{2}\n\tInnerXml:\n{3}\n\nEntity:\n{4}\n\nStackTrace:\n{5}</value>
  </data>
  <data name="DynamicInsertUnsupportedPropertyErrorMessageFormat" xml:space="preserve">
    <value>Unsupported property types found in attribute map: CrmAttribute:{0}, ActiviserAttribute{1}, DataType:{2}</value>
  </data>
  <data name="DynamicUpdateErrorMessageFormat" xml:space="preserve">
    <value>Error updating activiser {0} entity as CRM {1} entity\n\tException message:{2}\n\tInnerXml:\n{3}\n\nEntity:\n{4}\n\nStackTrace:\n{5}</value>
  </data>
  <data name="DynamicUpdateDataTypeMismatchWarning" xml:space="preserve">
    <value>Existing CRM Data for Attribute [{0}] has a different type ({1}) than that specified in the gateway configuration ({2})</value>
  </data>
  <data name="DynamicRetrieveFailureMessage" xml:space="preserve">
    <value>Error retrieving entity from CRM</value>
  </data>
  <data name="CrmServiceBuilderPath" xml:space="preserve">
    <value>//MSCRMServices//2007//CrmService.asmx</value>
  </data>
  <data name="DefaultTestMessage" xml:space="preserve">
    <value>&lt;ConfigError&gt;Unable to determine CRM Server configuration&lt;/ConfigError&gt;</value>
  </data>
  <data name="ParametersMessageFormat" xml:space="preserve">
    <value>&lt;Configuration&gt;&lt;Organization&gt;{0}&lt;/Organization&gt;&lt;Server&gt;{1}&lt;/Server&gt;&lt;/Configuration&gt;</value>
  </data>
  <data name="WhoAmIResponseFormat" xml:space="preserve">
    <value>&lt;WhoAmI&gt;&lt;OrganizationId&gt;{0}&lt;/OrganizationId&gt;&lt;UserId&gt;{1}&lt;/UserId&gt;&lt;/WhoAmI&gt;</value>
  </data>
  <data name="ErrorGettingCrmServiceInstance" xml:space="preserve">
    <value>&lt;Error&gt;Error getting CRM Service Instance for Organization&lt;/Error&gt;</value>
  </data>
  <data name="UnableToConnectToService" xml:space="preserve">
    <value>&lt;Error&gt;Unable to connect to server&lt;/Error&gt;</value>
  </data>
  <data name="ErrorTestingCRMConnection" xml:space="preserve">
    <value>&lt;Error&gt;&lt;Message&gt;Error testing CRM connection&lt;/Message&gt;&lt;Exception&gt;{0}&lt;/Exception&gt;&lt;/Error&gt;</value>
  </data>
  <data name="ErrorSavingDataToCRM" xml:space="preserve">
    <value>Error saving data to CRM</value>
  </data>
  <data name="ConfigCrmServiceLocationKey" xml:space="preserve">
    <value>CrmServiceLocation</value>
  </data>
  <data name="ConfigOrganizationNameKey" xml:space="preserve">
    <value>OrganizationName</value>
  </data>
  <data name="EntityIDMissingOrEmpty" xml:space="preserve">
    <value>Entity ID missing or empty</value>
  </data>
  <data name="CreatingNewEntityFromActiviser" xml:space="preserve">
    <value>Creating new {0} entity from activiser {1}</value>
  </data>
  <data name="UpdatingEntityFromActiviser" xml:space="preserve">
    <value>Updating {0} entity from activiser {1}</value>
  </data>
  <data name="RegistryBaseKey" xml:space="preserve">
    <value>SOFTWARE\activiser</value>
  </data>
  <data name="RegistryUsernameKey" xml:space="preserve">
    <value>username</value>
  </data>
  <data name="RegistryPasswordKey" xml:space="preserve">
    <value>password</value>
  </data>
  <data name="RegistryDomainKey" xml:space="preserve">
    <value>domain</value>
  </data>
  <data name="DynamicAssignMissingDataMessage" xml:space="preserve">
    <value>A valid Entity ID and a valid Owner are both required.</value>
  </data>
  <data name="EventLogName" xml:space="preserve">
    <value>activiser</value>
  </data>
  <data name="EventLogSource" xml:space="preserve">
    <value>activiser Output Gateway for Microsoft CRM</value>
  </data>
  <data name="CreatedNewEntityFromActiviser" xml:space="preserve">
    <value>Created new {0} entity from activiser {1}</value>
  </data>
  <data name="FailedToCreateNewEntityFromActiviser" xml:space="preserve">
    <value>Failed to created new {0} entity from activiser {1}</value>
  </data>
  <data name="FailedToUpdateEntityFromActiviser" xml:space="preserve">
    <value>Failed to update {0} entity from activiser {1}: {2}</value>
  </data>
  <data name="TestSucceeded" xml:space="preserve">
    <value>Gateway test succeeded.OrganizationId:{0}, UserId: {1}</value>
  </data>
  <data name="UpdatedEntityFromActiviser" xml:space="preserve">
    <value>Updated {0} entity from activiser {1}</value>
  </data>
</root>